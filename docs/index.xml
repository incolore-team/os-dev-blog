<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on 操作系统开发</title>
    <link>https://os-dev.incolore.net/docs/</link>
    <description>Recent content in Docs on 操作系统开发</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 23 Jan 2021 08:37:54 +0800</lastBuildDate><atom:link href="https://os-dev.incolore.net/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VirtualBox 的安装</title>
      <link>https://os-dev.incolore.net/docs/1.1-virtualbox-%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 23 Jan 2021 08:37:54 +0800</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/1.1-virtualbox-%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>下载#访问 Downloads – Oracle VM VirtualBox
找到：
点击开始下载。
安装#全部按照默认设置进行安装：
中途若有任何“安全中心”、“杀毒软件”的提示，全部选择允许。
结果#之后即可看到 VirtualBox 的主窗口：</description>
    </item>
    
    <item>
      <title></title>
      <link>https://os-dev.incolore.net/docs/1.2-%E5%9C%A8-virtualbox-%E5%AE%89%E8%A3%85-ubuntu-%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/1.2-%E5%9C%A8-virtualbox-%E5%AE%89%E8%A3%85-ubuntu-%E7%B3%BB%E7%BB%9F/</guid>
      <description>在 VirtualBox 安装 Ubuntu 系统#访问 Index of /ubuntu-releases/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror
下载#找到版本号最新的发行版：
点击进入：
找到带有 desktop（桌面版），amd64（64 位架构） 的 iso 格式下载链接。复制链接地址，用合适的工具下载：
等待下载的过程中，可以继续后面的操作。
创建虚拟机#在主界面点击【新建】：
基本信息#将会显示如下窗口：
名称：任取
文件夹：任取，建议放在系统盘之外的磁盘，以免之后占用过多空间
类型：选择 Linux
版本：选择 Ubuntu (64bit)
点击【下一步】。
内存大小#内存配额建议在 1024~2048 MB 之间。建议为你的系统的内存的 1/8。你可以在任务管理器查看自己电脑的内存大小。点【下一步】。
硬盘类型和大小#选择 现在创建虚拟硬盘，点击【创建】
类型默认【VDI】，下一步。
默认【动态分配】，下一步。
大小可以多给一点，因为是动态分配，所以这里可以任意划分上限，建议 20~100GB。点击【创建】。
现在虚拟机建好了。
安装系统#在左边选中刚才创建的系统，点击工具栏的【启动】。
选择启动盘#点击小图标：</description>
    </item>
    
    <item>
      <title></title>
      <link>https://os-dev.incolore.net/docs/1.3-%E4%B8%BA-ubuntu-%E8%A7%A3%E9%99%A4%E7%BD%91%E7%BB%9C%E5%B0%81%E9%94%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/1.3-%E4%B8%BA-ubuntu-%E8%A7%A3%E9%99%A4%E7%BD%91%E7%BB%9C%E5%B0%81%E9%94%81/</guid>
      <description>为 Ubuntu 解除网络封锁# 外交部耿爽表示：正确地看待并维护中美在科技、人文领域的交流合作，多做有利于增进中美互信与合作的事情，要拉手而不是松手，要拆墙而不是筑墙。
 为了避免今后遇到的各种奇葩网络问题，我们今天要先做一点微小的工作。
创建 HTTP 局域网代理服务器#这一步是把我们的科学上网工具转化为一个 HTTP 代理服务器。需要得到一个 http://ip:port 形式的地址。对于 v2ray, shadowsocks, Clash, 操作有所不同。这里以 Clash 为例。如果你使用的是其它程序，请自行搜索“xxx http 局域网代理”。
查看自己的 IP 地址#按下 Win+X 键。（Win 键就是能打开开始菜单那个键，在你的键盘的最底下一行，一般有个窗户的样子）
打开 PowerShell，执行如下命令：
PS C:\Windows\system32&amp;gt; ipconfig 你会看到：
Windows IP 配置 以太网适配器 以太网: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::a5de:d926:8b89:ab0c%7 IPv4 地址 .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://os-dev.incolore.net/docs/1.4-%E4%B8%BA-ubuntu-%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/1.4-%E4%B8%BA-ubuntu-%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/</guid>
      <description>为 Ubuntu 安装增强功能#准备工作#先登录。
按下 Ctrl+Alt+T 呼出终端。
执行如下指令：
 注意：你需要输入的指令是 $ 后面这部分，也即 sudo apt update，后面的也是一样。前面的 pluvet@localos 表示用户和主机名，在终端上是不能直接编辑的，你的输入光标一开始就会在 $ 后面。打上命令之后，按回车执行命令。按 Ctrl+C 强行中止执行。
 pluvet@localos:~$ sudo apt update 然后执行：
pluvet@localos:~$ sudo apt install virtualbox-guest-utils virtualbox-guest-dkms 等待执行完成。
 注意：你可能会遇到下载失败（Failed to fetch&amp;hellip;），解决方法见《为 Ubuntu 解除网络封锁》。
 插入虚拟安装光盘#在菜单点击 设备 / 安装增强功能：
点击 Run 并输入密码：
等。
读上面的字，如果没有出现 Failed，Unable 之类的负面词汇，说明你成功了。
回车。关机：
重启后即可生效。
常用配置#设置分辨率#启用双向剪贴板共享#启用拖放同理。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://os-dev.incolore.net/docs/1.5-%E4%B8%BA-ubuntu-%E9%85%8D%E7%BD%AE-ssh-%E8%BF%9E%E6%8E%A5%E5%B9%B6%E5%AF%B9%E6%8E%A5-vscode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/1.5-%E4%B8%BA-ubuntu-%E9%85%8D%E7%BD%AE-ssh-%E8%BF%9E%E6%8E%A5%E5%B9%B6%E5%AF%B9%E6%8E%A5-vscode/</guid>
      <description>为 Ubuntu 配置 SSH 连接并对接 VSCode#以下以 母机 代称虚拟机所运行在的实体机。
生成密钥#在母机 PowerShell 中，执行如下命令，
PS C:\Windows\system32&amp;gt; cd ~/.ssh PS C:\Users\i\.ssh&amp;gt; ls 目录: C:\Users\i\.ssh Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 2021-01-06 23:33 142 config -a---- 2021-01-06 23:24 1679 id_rsa -a---- 2021-01-06 23:24 400 id_rsa.pub -a---- 2021-01-06 23:34 176 known_hosts 可以看到存在 id_rsa, id_rsa.pub 文件，说明已经有密钥了。
 如果执行 ls 命令报错，或者你的用户名含有中文，说明你还没有密钥，建议通过 mkdir c:\ssh 创建文件夹。然后保存位置写成 c:\ssh\id_rsa
 如果你没有，请如此生成一个：
执行：
PS C:\Users\i\.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://os-dev.incolore.net/docs/1.6-%E5%9C%A8-ubuntu-%E4%B8%AD%E5%AE%89%E8%A3%85-bochs-%E8%99%9A%E6%8B%9F%E6%9C%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/1.6-%E5%9C%A8-ubuntu-%E4%B8%AD%E5%AE%89%E8%A3%85-bochs-%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid>
      <description>下载 Bochs#访问 Bochs x86 PC emulator - Browse /bochs at SourceForge.net。
找到最新版：
我们要编译安装，所以下载 bochs-2.6.11.tar.gz
下载之后是存放在 Windows 上的（当然，你也可以直接在 Ubuntu 中打开 Firefox 浏览器下载），我们直接用 VSCode 传输到 Ubuntu 中。
传输源代码到 Linux 中#在 VSCode 打开终端（Ctrl+Shift+~），在 ~ 下创建 dev 目录：
打开这个目录：
然后将文件从 Windows 资源管理器直接拖进来就行：
执行：
pluvet@localos:~/dev$ tar -zvxf bochs-2.6.11.tar.gz 进行解压。
进入解压到的目录
pluvet@localos:~/dev$ cd bochs-2.6.11/ 编译安装#以防万一，请先执行：
sudo apt install libx11-devsudo apt install xorg-dev编辑 bx_debug/dbg_main.cpp，变更如下：
Description: Fix the build with SMP enabled Origin: https://sourceforge.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://os-dev.incolore.net/docs/2.1-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BC%95%E5%AF%BC%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://os-dev.incolore.net/docs/2.1-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BC%95%E5%AF%BC%E7%A8%8B%E5%BA%8F/</guid>
      <description>什么是 BIOS#BIOS 就是内置在主板上的一个程序，当系统启动时，会执行 BIOS 中的代码，进行设备检查（称为自检）等等。当检查通过之后，会读取 启动设备 中的引导程序，从而将操作系统加载到内存运行。
什么是引导程序#引导程序就是讲操作系统加载到内存，运行整个操作系统的程序。
BIOS 如何执行引导程序#BIOS 会读取启动设备的前 512B（B 是字节单位，Byte），这些字节是设备的第一个扇区，如果这个扇区的结束字节是 0x55, 0xaa 则表示这个扇区是可引导扇区，这些字节称为（即主引导记录（master boot record，MBR）），将这一块加载到物理内存（具体位置是 0x7c00）中，然后执行其中的二进制代码（这些代码就是引导程序）。
安装 NASM#NASM 是将汇编代码编译为二进制的工具。安装方式：
sudo apt install nasm 安装 HexEdit#Hexedit 是一个十六进制编译器。安装：
sudo apt install hexedit 第一个引导程序#下面，我们用 Intel 汇编，编写一个最简单的引导程序：
; 告知编译器程序的起始位置org 0x7c00BaseOfStack equ 0x7c00Label_Start:mov ax, csmov ds, axmov es, axmov ss, axmov sp, BaseOfStack; ======== 清屏mov ax, 0600hmov bx, 0700hmov cx, 0mov dx, 0184fhint 10h; ======== 设置焦点mov ax, 0200hmov bx, 0000hmov dx, 0000hint 10h; ======== 在屏幕上显示 Start Booting.</description>
    </item>
    
  </channel>
</rss>
